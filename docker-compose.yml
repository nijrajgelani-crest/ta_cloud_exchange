version: "3"
services:
  mongodb:
    image: mongo:4.4.3
    container_name: "mongodb"
    command: [--auth]
    volumes:
      - ./data/mongo-user:/docker-entrypoint-initdb.d:z
      - ./data/mongo-data:/data/db:z
    environment:
      - MONGO_INITDB_ROOT_USERNAME=cteadmin
      - MONGO_INITDB_ROOT_PASSWORD=cteadmin
    restart: on-failure:5
    ports:
      - 27017:27017
  core:
    image: index.docker.io/crestsystems/netskope:core-latest
    container_name: "core"
    volumes:
      - ./data/custom_plugins:/opt/netskope/plugins/custom_plugins:z
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PLUGIN_TIMEOUT_MINUTES=120
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=cteadmin
      - MONGO_PASSWORD=cteadmin
      - RABBITMQ_HOST=localhost
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - JWT_SECRET=secret
      - JWT_ALGORITHM=HS256
      - DOCKER_USERNAME=DOCKER_USERNAME
      - DOCKER_PASSWORD=DOCKER_PASSWORD
      - WATCHTOWER_HTTP_API_TOKEN=token
    restart: on-failure:5
    ports:
      - 15672:15672 # for rabbitmq management plugin
    links:
      - mongodb
      - watchtower
    labels:
      - com.centurylinklabs.watchtower.enable=true
  ui:
    image: index.docker.io/crestsystems/netskope:ui-latest
    container_name: "ui"
    restart: on-failure:5
    volumes:
      - ./data/ssl_certs:/tmp/ssl_certs:z
    ports:
      - 443:3000
    links:
      - core
    labels:
      - com.centurylinklabs.watchtower.enable=true
  watchtower:
    image: containrrr/watchtower:1.0.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # - /root/.docker/config.json:/config.json  # uncomment this line if repo requires authentication
    environment:
      - WATCHTOWER_HTTP_API=true
      - WATCHTOWER_HTTP_API_TOKEN=token
      - WATCHTOWER_LABEL_ENABLE=true
    ports:
      - 8080:8080
    command: --interval 30
